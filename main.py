WHITE = (255,255,255)
BLACK = (0, 0, 0)

LEVEL_HEIGHT = 500

WINDOW_WIDTH = 500
WINDOW_HEIGHT = 600

from collections import deque
import pygame, time

pygame.init()

screen = pygame.display.set_mode([WINDOW_WIDTH, WINDOW_HEIGHT])
bg = pygame.image.load("./asset/bg.png")

leftnote = pygame.transform.scale(pygame.image.load("./asset/left.png"), (50, 50))
rightnote = pygame.transform.scale(pygame.image.load("./asset/right.png"), (50, 50))

sound = pygame.mixer.Sound('./asset/City Key.mp3')
playing = False

pygame.font.init()
my_font = pygame.font.Font('./asset/Roboto-Regular.ttf', 30)

# 왼쪽 노트들
notes1 = deque([2.879000186920166, 3.943000078201294, 5.2820000648498535, 6.144000053405762, 7.476999998092651, 8.08899998664856, 8.972000122070312, 9.407000064849854, 12.565999984741211, 12.950999975204468, 13.958000183105469, 14.463000059127808, 14.680000066757202, 15.077000141143799, 15.30299997329712, 15.740000009536743, 16.193000078201294, 16.569000005722046, 17.972000122070312, 19.5310001373291, 19.944000005722046, 20.33899998664856, 20.87000012397766, 22.09600019454956, 22.91600012779236, 23.28700017929077, 23.72100019454956, 24.374000072479248, 25.100000143051147, 25.319000005722046, 26.396000146865845, 26.62600016593933, 27.087000131607056, 27.513000011444092, 28.625, 28.850000143051147, 29.975000143051147, 30.205000162124634, 30.634000062942505, 31.086000204086304, 31.25600004196167, 31.94700002670288, 32.19200015068054, 32.873000144958496, 33.134000062942505, 33.58400011062622, 33.7960000038147, 34.63100004196167, 35.057000160217285, 35.28700017929077, 36.402000188827515, 36.60899996757507, 37.741000175476074, 38.140000104904175, 39.241000175476074, 39.492000102996826, 41.004000186920166, 41.41100001335144, 42.81400012969971, 44.15499997138977, 44.621999979019165, 45.04200005531311, 45.29100012779236, 46.437000036239624, 46.63499999046326, 48.13900017738342, 48.60600018501282, 48.84400010108948, 49.04700016975403, 49.94600009918213, 50.13800001144409, 51.31000018119812, 51.94099998474121, 52.33800005912781, 52.87600016593933, 53.111000061035156, 54.473999977111816, 55.5220000743866, 55.95900011062622, 56.35899996757507, 56.63100004196167, 57.04400014877319, 57.259000062942505, 58.37000012397766, 59.51200008392334, 59.930999994277954, 60.16000008583069, 60.68400001525879, 60.86199998855591, 62.2020001411438, 62.61800003051758, 63.09400010108948, 64.20099997520447, 65.03200006484985, 65.99100017547607, 66.6650002002716, 67.74600005149841, 68.42799997329712, 69.74900007247925, 70.42600011825562, 70.85300016403198, 71.26200008392334, 71.77500009536743, 72.17600011825562, 72.6470000743866, 73.06700015068054, 73.30000019073486, 73.51700019836426, 73.9760000705719, 74.40300011634827, 75.12000012397766, 75.78400015830994, 76.44200015068054, 77.34899997711182, 78.40499997138977, 78.61199998855591, 79.24400019645691, 79.72500014305115, 80.23300004005432, 80.6650002002716, 81.51200008392334, 82.14100003242493, 83.50999999046326, 83.92200016975403, 84.35800004005432, 84.89499998092651, 85.58000016212463, 86.38800001144409, 87.12900018692017, 87.51999998092651, 87.89900016784668, 89.25100016593933, 90.61500000953674, 91.08100008964539, 92.1800000667572])
now1 = deque()
# 오른쪽 노트들
notes2 = deque([3.2760000228881836, 4.562000036239624, 5.440999984741211, 5.682000160217285, 5.891000032424927, 6.825999975204468, 8.778000116348267, 9.187000036239624, 9.652000188827515, 10.442000150680542, 11.151000022888184, 11.725000143051147, 12.354000091552734, 12.769999980926514, 13.136000156402588, 15.993000030517578, 16.402000188827515, 16.79200005531311, 17.25100016593933, 17.51200008392334, 18.20900011062622, 18.66600012779236, 18.89900016784668, 19.34500002861023, 19.74400019645691, 20.142000198364258, 21.098999977111816, 21.53700017929077, 21.731000185012817, 22.40400004386902, 23.12000012397766, 23.515000104904175, 23.96500015258789, 24.636000156402588, 25.713000059127808, 25.919000148773193, 26.874000072479248, 27.308000087738037, 27.978000164031982, 28.174000024795532, 29.290000200271606, 29.5, 30.407000064849854, 30.841000080108643, 31.54200005531311, 31.733999967575073, 32.450000047683716, 32.64300012588501, 34.02800011634827, 34.180999994277954, 34.34000015258789, 35.742000102996826, 35.96300005912781, 37.0460000038147, 37.28800010681152, 37.47699999809265, 37.938000202178955, 38.59000015258789, 38.81500005722046, 40.15700006484985, 40.789000034332275, 41.23399996757507, 41.664000034332275, 42.36800003051758, 43.074000120162964, 43.48300004005432, 43.71000003814697, 44.378000020980835, 44.842000007629395, 45.753000020980835, 45.9760000705719, 47.26600003242493, 47.70800018310547, 47.94500017166138, 48.384000062942505, 49.28600001335144, 49.504000186920166, 50.8270001411438, 51.52400016784668, 51.741000175476074, 52.15499997138977, 53.60199999809265, 53.77400016784668, 54.86900019645691, 55.105000019073486, 55.30400013923645, 55.746999979019165, 57.69099998474121, 57.94099998474121, 58.61900019645691, 58.82100009918213, 59.05900001525879, 59.26800012588501, 61.492000102996826, 61.91200017929077, 62.42500019073486, 62.83899998664856, 63.486000061035156, 63.753000020980835, 64.47500014305115, 65.50800013542175, 65.73000001907349, 66.18800020217896, 66.41799998283386, 67.10600018501282, 67.30100011825562, 67.99900007247925, 68.65200018882751, 69.07800006866455, 69.29900002479553, 69.52700018882751, 69.94099998474121, 70.15100002288818, 70.63600015640259, 71.0640001296997, 71.53600001335144, 71.98000001907349, 72.38300013542175, 72.87700009346008, 73.74500012397766, 74.16600012779236, 74.90499997138977, 75.5440001487732, 76.19900012016296, 76.66100001335144, 76.88300013542175, 77.07500004768372, 77.7480001449585, 77.98399996757507, 79.97900009155273, 80.45000004768372, 80.85800004005432, 81.30700016021729, 81.9300000667572, 82.7720000743866, 83.26600003242493, 83.71800017356873, 84.12000012397766, 85.11600017547607, 85.80900001525879, 86.83300018310547, 87.33400011062622, 87.71500015258789, 88.56200003623962, 89.875, 90.83300018310547, 91.27600002288818, 91.50200009346008, 91.96300005912781])
now2 = deque()

start_time = time.time()

# 게임 시작으로부터 지난 시간 반환
def gettime():
    return time.time() - start_time

# (실제 텍스트, 언제까지)
TEXT = ('', float('inf'))

def settext(text):
    global TEXT
    TEXT = (text, time.time() + 0.5) # 0.5초 후까지
    
def perfect():
    settext('perfect')

def early():
    settext('early')

def late():
    settext('late')
    
def miss():
    settext('miss')

while 1:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            pygame.quit()
            break
        if event.type == pygame.KEYDOWN:
            # f: 102, j: 106
            if event.key == 102:
                # left
                if not now1:
                    miss()
                else:
                    note = now1.popleft()
                    nowtime = gettime()
                    if abs(note - nowtime) <= 0.2:
                        perfect()
                    elif note < nowtime:
                        late()
                    else:
                        early()
            elif event.key == 106:
                # left
                if not now2:
                    miss()
                else:
                    note = now2.popleft()
                    nowtime = gettime()
                    if abs(note - nowtime) <= 0.2:
                        perfect()
                    elif note < nowtime:
                        late()
                    else:
                        early()

    # 배경
    screen.blit(bg, (0, 0))

    # 텍스트
    if TEXT[1] > time.time():
        text_surface = my_font.render(TEXT[0], False, (0, 0, 0))
        text_rect = text_surface.get_rect(center=(WINDOW_WIDTH/2, 30))
        screen.blit(text_surface, text_rect)

    # 현재까지 지난 시간
    diff_time = gettime()

    # 음악
    # 시작한 지 2.55 초 후 음악 시작
    if not playing and diff_time > 2.55:
      sound.play()
      playing = True
    
    # 현재 시간 ~ 2초 뒤 까지 보여주기
    while notes1 and notes1[0] <= diff_time+2:
        now1.append(notes1.popleft())
    while now1 and (2 - (now1[0] - diff_time)) / 2 * LEVEL_HEIGHT > WINDOW_HEIGHT:
        now1.popleft()
        miss()
    
    while notes2 and notes2[0] <= diff_time+2:
        now2.append(notes2.popleft())
    while now2 and (2 - (now2[0] - diff_time)) / 2 * LEVEL_HEIGHT > WINDOW_HEIGHT:
        now2.popleft()
        miss()
    
    for note in now1:
        height = (2 - (note - diff_time)) / 2 * LEVEL_HEIGHT
        screen.blit(leftnote, (WINDOW_WIDTH/3-25, height-25))
    for note in now2:
        height = (2 - (note - diff_time)) / 2 * LEVEL_HEIGHT
        screen.blit(rightnote, (WINDOW_WIDTH/3*2-25, height-25))

    pygame.display.flip()
